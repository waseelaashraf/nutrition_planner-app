<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NutriPlan AI - Personalized Nutrition Planner</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Warm Harmony -->
    <!-- Application Structure Plan: A dual-view, tab-based dashboard. The structure is designed for task-oriented user flows. The "Nutritionist View" focuses on client management, with a client list, detailed profiles, and meal planning tools. The "Client View" provides a simplified dashboard for tracking progress, viewing meal plans, and providing feedback. This separation ensures that each user type has a clean, uncluttered interface tailored to their specific needs, improving usability and reducing cognitive load. Navigation is handled through clear tabs at the top, allowing seamless switching between the two primary roles. -->
    <!-- Visualization & Content Choices: 
        - Client List (Nutritionist View): Report Info -> List of clients. Goal -> Organize/Manage. Viz -> Interactive HTML table. Interaction -> Click to view details. Justification -> Provides a clear, scannable overview of all clients. Method -> HTML/Tailwind + JS.
        - Client Profile (Nutritionist View): Report Info -> Client health metrics, preferences. Goal -> Inform/Analyze. Viz -> Structured HTML sections with key stats. Interaction -> Edit fields, view notes. Justification -> Consolidates all client data in one place for easy reference. Method -> HTML/Tailwind + JS.
        - Macronutrient Breakdown (Both Views): Report Info -> Calculated nutritional info. Goal -> Compare/Analyze. Viz -> Doughnut Chart (Chart.js). Interaction -> Hover for details. Justification -> Visually compelling way to show macro balance. Method -> Chart.js/Canvas.
        - Progress Tracking (Client View): Report Info -> Client progress over time. Goal -> Change/Track. Viz -> Line Chart (Chart.js). Interaction -> Filter by time range (not implemented in this version). Justification -> Clearly shows trends and progress towards goals. Method -> Chart.js/Canvas.
        - Meal Plan (Both Views): Report Info -> Daily meal schedule. Goal -> Organize/Inform. Viz -> Accordion-style interactive list. Interaction -> Click to expand/collapse meal details. Justification -> Cleanly presents a lot of information without overwhelming the user. Method -> HTML/Tailwind + JS.
        - AI Recipe Assistant (Nutritionist View): Report Info -> AI-assisted recipe generation. Goal -> Create/Customize. Viz -> Text input/output interface. Interaction -> Type prompt, get AI suggestion. Justification -> Core feature for custom plan creation. Method -> HTML/Tailwind + JS (mocked API call).
    -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #FDFBF8; /* Warm Neutral Background */
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 500px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 350px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 350px;
            }
        }
        .tab-active {
            border-bottom-color: #8D7B68; /* Accent Color */
            color: #3C3633;
        }
        .tab-inactive {
            border-bottom-color: transparent;
            color: #A4907C;
        }
        .btn-primary {
            background-color: #8D7B68;
            color: #FFFFFF;
            transition: background-color 0.3s;
        }
        .btn-primary:hover {
            background-color: #716354;
        }
        .card {
            background-color: #FFFFFF;
            border: 1px solid #EFEAE3;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);
        }
    </style>
</head>
<body class="text-gray-800">

    <div class="container mx-auto p-4 md:p-8 max-w-7xl">
        
        <header class="text-center mb-8">
            <h1 class="text-4xl font-bold text-[#3C3633]">NutriPlan AI</h1>
            <p class="text-lg text-[#A4907C] mt-2">Your Personal AI-Powered Nutrition Planner</p>
        </header>

        <div class="tabs border-b border-gray-200 mb-8">
            <div class="flex justify-center">
                <button id="nutritionistTab" class="py-4 px-6 text-lg font-semibold border-b-4 tab-active">Nutritionist View</button>
                <button id="clientTab" class="py-4 px-6 text-lg font-semibold border-b-4 tab-inactive">Client View</button>
            </div>
        </div>

        <main id="appContent">
            <!-- Nutritionist View -->
            <div id="nutritionistView">
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    
                    <!-- Client List -->
                    <div class="lg:col-span-1 card p-6">
                        <h2 class="text-2xl font-bold mb-4 text-[#3C3633]">My Clients</h2>
                        <div id="clientList" class="space-y-3">
                            <!-- Client items will be injected here by JS -->
                        </div>
                    </div>

                    <!-- Client Details & Meal Planner -->
                    <div class="lg:col-span-2 card p-6">
                        <div id="clientDetailView" class="hidden">
                            <h2 class="text-3xl font-bold mb-2 text-[#3C3633]" id="clientName"></h2>
                            <p class="text-md text-[#A4907C] mb-6" id="clientGoal"></p>
                            
                            <!-- Client Profile Section -->
                            <div class="mb-8">
                                <h3 class="text-xl font-bold text-[#3C3633] mb-4">Client Profile</h3>
                                <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
                                    <div class="bg-[#FDFBF8] p-4 rounded-lg">
                                        <p class="text-sm text-[#A4907C]">Age</p>
                                        <p class="text-2xl font-semibold" id="clientAge"></p>
                                    </div>
                                    <div class="bg-[#FDFBF8] p-4 rounded-lg">
                                        <p class="text-sm text-[#A4907C]">Height</p>
                                        <p class="text-2xl font-semibold" id="clientHeight"></p>
                                    </div>
                                    <div class="bg-[#FDFBF8] p-4 rounded-lg">
                                        <p class="text-sm text-[#A4907C]">Weight</p>
                                        <p class="text-2xl font-semibold" id="clientWeight"></p>
                                    </div>
                                    <div class="bg-[#FDFBF8] p-4 rounded-lg">
                                        <p class="text-sm text-[#A4907C]">Target Cal.</p>
                                        <p class="text-2xl font-semibold" id="clientTargetCalories"></p>
                                    </div>
                                </div>
                                <div class="mt-4 bg-[#FDFBF8] p-4 rounded-lg">
                                    <h4 class="font-semibold text-[#3C3633]">Allergies & Preferences</h4>
                                    <p class="text-gray-600" id="clientPreferences"></p>
                                </div>
                            </div>

                            <!-- Meal Plan Section -->
                            <div class="mb-8">
                                <h3 class="text-xl font-bold text-[#3C3633] mb-4">Today's Meal Plan</h3>
                                <div id="nutritionistMealPlan" class="space-y-2">
                                    <!-- Meal plan accordion will be injected here -->
                                </div>
                            </div>

                            <!-- AI Recipe Assistant -->
                            <div>
                                <h3 class="text-xl font-bold text-[#3C3633] mb-4">AI Recipe Assistant</h3>
                                <p class="text-gray-600 mb-4">Use the AI assistant to generate recipe ideas or find substitutions. For example, "Suggest a low-carb breakfast high in protein" or "Replace chicken with a vegetarian option in a curry."</p>
                                <div class="space-y-4">
                                    <textarea id="aiPrompt" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#8D7B68] focus:outline-none" rows="3" placeholder="Enter your prompt..."></textarea>
                                    <button id="generateSuggestionBtn" class="btn-primary font-bold py-2 px-4 rounded-lg w-full">Generate Suggestion</button>
                                    <div id="aiSuggestion" class="bg-[#FDFBF8] p-4 rounded-lg hidden">
                                        <h4 class="font-bold text-[#3C3633]">AI Suggestion:</h4>
                                        <p id="aiSuggestionText" class="text-gray-700 whitespace-pre-wrap"></p>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div id="selectClientMessage" class="flex items-center justify-center h-full text-center">
                            <p class="text-xl text-gray-500">Select a client to view their details and plan.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Client View -->
            <div id="clientView" class="hidden">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <!-- Welcome & Summary -->
                    <div class="lg:col-span-3 card p-6 text-center">
                        <h2 class="text-3xl font-bold text-[#3C3633]">Welcome, Jane Doe!</h2>
                        <p class="text-lg text-[#A4907C]">Here's your dashboard for today. Let's make it a great one!</p>
                    </div>

                    <!-- Progress Chart -->
                    <div class="lg:col-span-2 card p-6">
                        <h3 class="text-xl font-bold text-[#3C3633] mb-4 text-center">Weight Progress (Last 8 Weeks)</h3>
                        <div class="chart-container">
                            <canvas id="progressChart"></canvas>
                        </div>
                         <p class="text-sm text-gray-500 mt-4 text-center">This chart shows your weight trend. Consistent tracking helps you and your nutritionist adjust your plan for the best results.</p>
                    </div>

                    <!-- Macronutrient Breakdown -->
                    <div class="lg:col-span-1 card p-6 flex flex-col justify-center">
                        <h3 class="text-xl font-bold text-[#3C3633] mb-4 text-center">Today's Target Macros</h3>
                        <div class="chart-container">
                            <canvas id="macroChart"></canvas>
                        </div>
                        <p class="text-sm text-gray-500 mt-4 text-center">This shows the ideal balance of protein, carbs, and fats for your daily intake. Hover over the chart for details.</p>
                    </div>
                    
                    <!-- Client Meal Plan -->
                    <div class="lg:col-span-3 card p-6">
                        <h3 class="text-xl font-bold text-[#3C3633] mb-4">Today's Meal Plan</h3>
                        <div id="clientMealPlan" class="space-y-2">
                            <!-- Client meal plan will be injected here -->
                        </div>
                    </div>
                    
                    <!-- Feedback Section -->
                    <div class="lg:col-span-3 card p-6">
                        <h3 class="text-xl font-bold text-[#3C3633] mb-4">Feedback & Requests</h3>
                        <p class="text-gray-600 mb-4">Want to try something new or have feedback on a meal? Let your nutritionist know!</p>
                        <div class="space-y-4">
                            <textarea id="clientFeedback" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#8D7B68] focus:outline-none" rows="3" placeholder="Example: 'Could we try a different snack option for the afternoon?'"></textarea>
                            <button id="sendFeedbackBtn" class="btn-primary font-bold py-2 px-4 rounded-lg w-full">Send to Nutritionist</button>
                            <div id="feedbackConfirmation" class="text-center text-green-600 font-semibold hidden">Feedback sent successfully!</div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const nutritionistTab = document.getElementById('nutritionistTab');
            const clientTab = document.getElementById('clientTab');
            const nutritionistView = document.getElementById('nutritionistView');
            const clientView = document.getElementById('clientView');

            const clientListEl = document.getElementById('clientList');
            const clientDetailView = document.getElementById('clientDetailView');
            const selectClientMessage = document.getElementById('selectClientMessage');
            
            const clientNameEl = document.getElementById('clientName');
            const clientGoalEl = document.getElementById('clientGoal');
            const clientAgeEl = document.getElementById('clientAge');
            const clientHeightEl = document.getElementById('clientHeight');
            const clientWeightEl = document.getElementById('clientWeight');
            const clientTargetCaloriesEl = document.getElementById('clientTargetCalories');
            const clientPreferencesEl = document.getElementById('clientPreferences');
            const nutritionistMealPlanEl = document.getElementById('nutritionistMealPlan');
            
            const aiPromptEl = document.getElementById('aiPrompt');
            const generateSuggestionBtn = document.getElementById('generateSuggestionBtn');
            const aiSuggestionEl = document.getElementById('aiSuggestion');
            const aiSuggestionTextEl = document.getElementById('aiSuggestionText');

            const clientMealPlanEl = document.getElementById('clientMealPlan');
            const sendFeedbackBtn = document.getElementById('sendFeedbackBtn');
            const feedbackConfirmationEl = document.getElementById('feedbackConfirmation');

            let progressChartInstance = null;
            let macroChartInstance = null;

            const clientsData = [
                {
                    id: 1,
                    name: 'Jane Doe',
                    goal: 'Weight Loss & Increased Energy',
                    age: 34,
                    height: "5' 6\"",
                    weight: '150 lbs',
                    targetCalories: '1800 kcal',
                    preferences: 'No gluten, prefers fish over red meat.',
                    mealPlan: [
                        { meal: 'Breakfast', title: 'Scrambled Eggs with Spinach', details: '3 eggs, 1 cup spinach, 1/2 oz feta cheese. Cooked with olive oil.', calories: 350 },
                        { meal: 'Lunch', title: 'Grilled Salmon Salad', details: '4oz salmon, mixed greens, cherry tomatoes, cucumber, lemon-dill vinaigrette.', calories: 550 },
                        { meal: 'Snack', title: 'Apple with Almond Butter', details: '1 medium apple, 2 tbsp almond butter.', calories: 300 },
                        { meal: 'Dinner', title: 'Quinoa Bowl with Roasted Vegetables', details: '1 cup quinoa, roasted broccoli, bell peppers, and zucchini with a tahini dressing.', calories: 600 }
                    ],
                    progress: [152, 151, 151, 150, 149, 148, 148, 150],
                    macros: { protein: 30, carbs: 40, fat: 30 }
                },
                {
                    id: 2,
                    name: 'John Smith',
                    goal: 'Muscle Gain',
                    age: 28,
                    height: "6' 1\"",
                    weight: '185 lbs',
                    targetCalories: '2800 kcal',
                    preferences: 'Loves spicy food. Allergic to shellfish.',
                    mealPlan: [
                        { meal: 'Breakfast', title: 'Oatmeal with Protein Powder', details: '1 cup oats, 1 scoop vanilla protein powder, berries, and nuts.', calories: 600 },
                        { meal: 'Lunch', title: 'Chicken Burrito Bowl', details: '6oz grilled chicken, brown rice, black beans, salsa, avocado.', calories: 800 },
                        { meal: 'Snack', title: 'Greek Yogurt', details: '1 cup plain Greek yogurt with honey.', calories: 400 },
                        { meal: 'Dinner', title: 'Steak with Sweet Potato', details: '6oz sirloin steak, 1 large baked sweet potato, steamed asparagus.', calories: 1000 }
                    ],
                    progress: [180, 181, 182, 183, 184, 184, 185, 185],
                    macros: { protein: 40, carbs: 40, fat: 20 }
                },
                {
                    id: 3,
                    name: 'Emily White',
                    goal: 'Maintain Weight, Improve Gut Health',
                    age: 45,
                    height: "5' 4\"",
                    weight: '130 lbs',
                    targetCalories: '2000 kcal',
                    preferences: 'Vegetarian, focus on fermented foods.',
                     mealPlan: [
                        { meal: 'Breakfast', title: 'Kefir Smoothie', details: '1 cup kefir, banana, spinach, and chia seeds.', calories: 400 },
                        { meal: 'Lunch', title: 'Lentil Soup with Sourdough', details: 'Large bowl of homemade lentil soup with a slice of sourdough bread.', calories: 600 },
                        { meal: 'Snack', title: 'Kimchi on Crackers', details: '1/2 cup kimchi with whole grain crackers.', calories: 300 },
                        { meal: 'Dinner', title: 'Tempeh Stir-fry', details: '4oz tempeh, mixed vegetables, and a ginger-soy sauce.', calories: 700 }
                    ],
                    progress: [130, 131, 130, 129, 130, 130, 131, 130],
                    macros: { protein: 25, carbs: 50, fat: 25 }
                }
            ];

            function switchView(view) {
                if (view === 'nutritionist') {
                    nutritionistTab.classList.add('tab-active');
                    nutritionistTab.classList.remove('tab-inactive');
                    clientTab.classList.add('tab-inactive');
                    clientTab.classList.remove('tab-active');
                    nutritionistView.classList.remove('hidden');
                    clientView.classList.add('hidden');
                } else {
                    clientTab.classList.add('tab-active');
                    clientTab.classList.remove('tab-inactive');
                    nutritionistTab.classList.add('tab-inactive');
                    nutritionistTab.classList.remove('tab-active');
                    clientView.classList.remove('hidden');
                    nutritionistView.classList.add('hidden');
                    renderClientDashboard();
                }
            }
            
            nutritionistTab.addEventListener('click', () => switchView('nutritionist'));
            clientTab.addEventListener('click', () => switchView('client'));

            function renderClientList() {
                clientListEl.innerHTML = '';
                clientsData.forEach(client => {
                    const clientDiv = document.createElement('div');
                    clientDiv.className = 'p-4 border rounded-lg cursor-pointer hover:bg-[#FDFBF8] hover:border-[#8D7B68] transition';
                    clientDiv.innerHTML = `
                        <h3 class="font-bold text-lg text-[#3C3633]">${client.name}</h3>
                        <p class="text-sm text-gray-500">${client.goal}</p>
                    `;
                    clientDiv.addEventListener('click', () => showClientDetails(client.id));
                    clientListEl.appendChild(clientDiv);
                });
            }

            function showClientDetails(clientId) {
                const client = clientsData.find(c => c.id === clientId);
                if (client) {
                    clientNameEl.textContent = client.name;
                    clientGoalEl.textContent = client.goal;
                    clientAgeEl.textContent = client.age;
                    clientHeightEl.textContent = client.height;
                    clientWeightEl.textContent = client.weight;
                    clientTargetCaloriesEl.textContent = client.targetCalories;
                    clientPreferencesEl.textContent = client.preferences;
                    
                    renderMealPlan(client.mealPlan, nutritionistMealPlanEl);

                    selectClientMessage.classList.add('hidden');
                    clientDetailView.classList.remove('hidden');
                }
            }

            function renderMealPlan(mealPlan, container) {
                container.innerHTML = '';
                mealPlan.forEach(item => {
                    const accordion = document.createElement('div');
                    accordion.className = 'border border-gray-200 rounded-lg';
                    accordion.innerHTML = `
                        <button class="w-full text-left p-4 bg-gray-50 hover:bg-gray-100 rounded-t-lg focus:outline-none">
                            <div class="flex justify-between items-center">
                                <div>
                                    <span class="font-bold text-[#3C3633]">${item.meal}</span>:
                                    <span class="text-gray-700">${item.title}</span>
                                </div>
                                <span class="text-sm text-gray-500">${item.calories} kcal</span>
                            </div>
                        </button>
                        <div class="p-4 bg-white border-t border-gray-200 hidden rounded-b-lg">
                            <p class="text-gray-600">${item.details}</p>
                        </div>
                    `;
                    const button = accordion.querySelector('button');
                    const content = accordion.querySelector('.p-4');
                    button.addEventListener('click', () => {
                        content.classList.toggle('hidden');
                    });
                    container.appendChild(accordion);
                });
            }

            function renderClientDashboard() {
                const client = clientsData[0]; // Default to Jane Doe for this demo
                renderMealPlan(client.mealPlan, clientMealPlanEl);
                renderProgressChart(client.progress);
                renderMacroChart(client.macros);
            }

            function renderProgressChart(data) {
                const ctx = document.getElementById('progressChart').getContext('2d');
                if (progressChartInstance) {
                    progressChartInstance.destroy();
                }
                progressChartInstance = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Wk 8', 'Wk 7', 'Wk 6', 'Wk 5', 'Wk 4', 'Wk 3', 'Wk 2', 'Wk 1'],
                        datasets: [{
                            label: 'Weight (lbs)',
                            data: data,
                            borderColor: '#8D7B68',
                            backgroundColor: 'rgba(141, 123, 104, 0.1)',
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: false
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            }

            function renderMacroChart(data) {
                const ctx = document.getElementById('macroChart').getContext('2d');
                 if (macroChartInstance) {
                    macroChartInstance.destroy();
                }
                macroChartInstance = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Protein', 'Carbs', 'Fat'],
                        datasets: [{
                            label: 'Macros',
                            data: [data.protein, data.carbs, data.fat],
                            backgroundColor: ['#8D7B68', '#A4907C', '#C8B6A6'],
                            borderColor: '#FFFFFF',
                            borderWidth: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutout: '70%',
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return `${context.label}: ${context.raw}%`;
                                    }
                                }
                            }
                        }
                    }
                });
            }

            generateSuggestionBtn.addEventListener('click', () => {
                const prompt = aiPromptEl.value;
                if (!prompt) return;
                
                aiSuggestionTextEl.textContent = 'Generating...';
                aiSuggestionEl.classList.remove('hidden');

                setTimeout(() => {
                    let suggestion = "Based on your request, here's a suggestion:\n\n**Recipe: Tofu Scramble**\n\n* **Ingredients:** 1 block firm tofu (crumbled), 1/2 tsp turmeric, 1/4 tsp black salt (kala namak), 1 tbsp nutritional yeast, mixed vegetables (onions, bell peppers, spinach).\n* **Instructions:** Sauté vegetables. Add crumbled tofu and spices. Cook until heated through. \n\nThis provides a high-protein, low-carb breakfast that aligns with a vegetarian preference.";
                    if(prompt.toLowerCase().includes("vegetarian")) {
                        suggestion = "For a vegetarian replacement for chicken in curry:\n\n**Option 1: Chickpeas**\n* **Why:** They hold their shape well and absorb the curry flavor beautifully. They are a great source of protein and fiber.\n* **How:** Add one can of drained and rinsed chickpeas in the last 10-15 minutes of cooking.\n\n**Option 2: Paneer**\n* **Why:** A classic choice. It's a firm cheese that doesn't melt, providing a satisfying texture.\n* **How:** Cube the paneer and pan-fry it until golden before adding it to the curry sauce."
                    }
                    aiSuggestionTextEl.textContent = suggestion;
                }, 1500);
            });
            
            sendFeedbackBtn.addEventListener('click', () => {
                feedbackConfirmationEl.classList.remove('hidden');
                setTimeout(() => {
                    feedbackConfirmationEl.classList.add('hidden');
                }, 3000);
            });


            // Initial Render
            renderClientList();
        });
    </script>
</body>
</html>
